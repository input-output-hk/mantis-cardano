mantis {

  network {

    server-address {
      # Listening interface for Ethereum protocol connections
      # interface = "0.0.0.0"

      # Listening port for Ethereum protocol connections
      # port = 9076
    }

    discovery {
      # Turn discovery of/off
      # discovery-enabled = true

      # Listening port for discovery protocol
      # port = 30303

      # Set of initial nodes
      # bootstrap-nodes = [
      #  "enode://18a551bee469c2e02de660ab01dede06503c986f6b8520cb5a65ad122df88b17b285e3fef09a40a0d44f99e014f8616cf1ebc2e094f96c6e09e2f390f5d34857@47.90.36.129:30303",
      #  "enode://2521b2616f795f3eb21757b52908978783a5eb8c35850e5934015f713d00bb476370176264b5b678b88e4e14bed4196476627f7e079d67bf0c02622c0fe7d9d7@125.134.78.189:30303",
      #  "enode://3f5f14647126dc39323447e22cb548369e1377a4e789ad48a6dc6680df1a39a28c46d36e79165fa155fdfaa67337d9703e1f029d5a788306fdef2030669a3bba@50.64.94.28:30303",
      #  "enode://4fca8ecaf9bd12b805b2b99d2ed6a28e62223707d16c53dd746e2a70f067308b0d8d9a769412f9b323b3410083dfef3eeadd139fd6946535692c1b31467f1080@159.203.78.75:30303",
      #  "enode://57be9e74b22ff3ea1bd3fedeb2ced310387dd176866793e273c7712305d8e4677f8913c86f93dfa8810e1cdb4177e5f87112db8748199a7771baf8dced63688b@104.41.188.223:30303",
      #  "enode://94072bbbf1d3e5648afc573bbaf79b14a26ac48380f635fde32782631329263fe7a347251079f9abd3a2678f5bc5e672f8e6aff93a27f0f8f4e0e4f961dac68d@1.226.84.230:50303",
      #  "enode://98b863da48ab8bef2339a823d552f3619fd8e892425ae40c6812c6f7e4a0afb4f9591b012183e89a63bb01c5085d0e96aa5f0812652335fb0ac946d6aaf15881@118.178.57.121:30303",
      #  "enode://fba5a07e283d517a2680bcfc7aeb498ac2d246d756556a2ebd5edeb39496491c47a6d27e27f82833b7d7d12defc8de994de04bb58beb72472649f9a323006820@41.135.121.6:30303"
      #]
    }

    peer {
      # Retry delay for failed attempt at connecting to a peer
      # connect-retry-delay = 1 minute

      # Maximum number of reconnect attempts after the connection has been initiated.
      # After that, the connection will be dropped until its initiated again (eg. by peer discovery)
      # connect-max-retries = 2

      # Maximum number of peers this node can connect to
      # max-outgoing-peers = 40

      # Maximum number of peers that can connect to this node
      # max-incoming-peers = 5

      # Maximum number of peers that can be connecting to this node
      # max-pending-peers = 5

      # Ethereum network identifier:
      # 1 - mainnet, 2 - morden
      # network-id = 1
    }

    rpc {
      http {
        # JSON-RPC mode
        # Available modes are: http, https
        # Choosing https requires creating a certificate and setting up 'certificate-keystore-path' and
        # 'certificate-password-file'
        # See: https://github.com/input-output-hk/mantis/wiki/Creating-self-signed-certificate-for-using-JSON-RPC-with-HTTPS
        mode = "https"

        # Whether to enable JSON-RPC HTTP(S) endpoint
        # enabled = true

        # Listening address of JSON-RPC HTTP(S) endpoint
        # interface = "localhost"

        # Listening port of JSON-RPC HTTP(S) endpoint
        # port = 8546

        # Path to the keystore storing the certificates (used only for https)
        # null value indicates HTTPS is not being used
        certificate-keystore-path = "conf/mantis.jks"

        # Type of certificate keystore being used
        # Has to be null or one of the ones listed in:
        #   https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#KeyStore
        # A null value indicates HTTPS is not being used
        certificate-keystore-type = "jks"

        # File with the password used for accessing the certificate keystore (used only for https)
        # null value indicates HTTPS is not being used
        certificate-password-file = "conf/nopassword"

        # Domains allowed to query RPC endpoint. Use "*" to enable requests from
        # any domain.
        # cors-allowed-origins = []
      }

      ipc {
        # Whether to enable JSON-RPC over IPC
        # enabled = true

        # Path to IPC socket file
        # socket-file = ${mantis.datadir}"/mantis.ipc"
      }

      websocket {
        # Whether to enable JSON-RPC over Websocket
        # enabled = false

        # interface = "127.0.0.1"

        # port = 8547
      }

      # Enabled JSON-RPC APIs over the JSON-RPC endpoint
      # Available choices are: eth, web3, net, personal, test, daedalus, iele
      # apis = "eth,web3,net,personal,daedalus"

      # disabled-methods = []
    }
  }
}
