# This is a configuration fragment that shows all the relevant parts to AtomixRaftConsensus
mantis {
  network {
    server-address {
      # Listening interface for Ethereum protocol connections
      interface = "999.999.999.999"

      # Listening port for Ethereum protocol connections
      port = 30309
    }

    discovery {
      discovery-enabled = true
      bootstrap-nodes = [
        "enode://LONGID@IP:PORT"
      ]
    }
  }

  consensus {
    # FIXME this was moved here from the `mining` section
    active-timeout = 5 seconds

    # New timeout to replace `ommer-pool-query-timeout` for uses outside ethash mining
    get-transaction-from-pool-timeout = 5.seconds

    # Moved from the `mining` section
    # Miner's coinbase address
    coinbase = "0011223344556677889900112233445566778899"

    # Moved from the `mining` section
    # Extra data to add to mined blocks
    header-extra-data = "mantis"

    #####################
    # Moved from the `mining` section because this is needed by BlockGenerator, which we use in other consensus
    # protocols as well.
    #####################
    # This determines how many parallel eth_getWork request we can handle, by storing the prepared blocks in a cache,
    # until a corresponding eth_submitWork request is received
    block-cashe-size = 30

    # See io.iohk.ethereum.consensus.Protocol for the available protocols.
    # Declaring the protocol here means that a more protocol-specific configuration
    # is pulled from the corresponding consensus implementation.
    # For example, in case of ethash, a section named `mining` is used.
    protocol = atomix-raft

    # If true then the consensus protocol uses this node for mining.
    # In the case of ethash PoW, this means mining new blocks, as specified by Ethereum.
    # In the general case, the semantics are due to the specific consensus implementation.
    mining-enabled = false
  }

  # This is the section dedicated to mining in the context of `atomix-raft` consensus.
  # The consensus protocol is selected by setting `mantis.consensus.protocol = atomix-raft`.
  atomix-raft {
    # This is for mining
    coinbase = "0011223344556677889900112233445566778899"

    # FIXME TBD
    # cluster-name = ""

    # Represents this node
    # FIXME Could derive the IP from network.server-address.interface
    #
    # ID and PORT are not mandatory.
    # If PORT is not given, then is assumes the value of
    # io.atomix.messaging.impl.NettyMessagingService.DEFAULT_PORT, which currently is 5679.
    # If ID is not given, then it value is IP_PORT.
    local-node = "ID1:IP:PORT"

    # All the other nodes in the cluster, in the same format as with local-node
    # FIXME Derive from network.discovery.bootstrap-nodes
    bootstrap-nodes = [
      "ID2:IP:PORT",
      "ID3:IP:PORT",
      "ID4:IP:PORT"
    ]

    # Transient data directory
    data-dir = "atomix-raft-data"
  }
}
