mantis {
  # Identifier used when connecting to other clients
  client-id = "mantis"

  # Version string (reported by an RPC method)
  client-version = "mantis/v0.1"

  # Base directory where all the data used by the node is stored, including blockchain data and private keys
  datadir = ${user.home}"/.mantis"

  # The unencrypted private key of this node
  node-key-file = ${mantis.datadir}"/nodeId.keys"

  # Keystore directory: stores encrypted private keys of accounts managed by this node
  keystore-dir = ${mantis.datadir}"/keystore"

  # timeout for shutting down the ActorSystem
  shutdown-timeout = "15.seconds"

  # one of the algorithms defined here:
  # https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#SecureRandom
  # Uncomment this to specify, otherwise use the default implementation
  # secure-random-algo = "NativePRNG"

  network {
    # Ethereum protocol version
    protocol-version = 63

    server-address {
      # Listening interface for Ethereum protocol connections
      interface = "127.0.0.1"

      # Listening port for Ethereum protocol connections
      port = 9076
    }

    discovery {

      # Turn discovery of/off
      discovery-enabled = true

      # Listening interface for discovery protocol
      interface = "0.0.0.0"

      # Listening port for discovery protocol
      port = 30303

      # Set of initial nodes
      bootstrap-nodes = [
        "enode://e809c4a2fec7daed400e5e28564e23693b23b2cc5a019b612505631bbe7b9ccf709c1796d2a3d29ef2b045f210caf51e3c4f5b6d3587d43ad5d6397526fa6179@174.112.32.157:30303",
        "enode://6e538e7c1280f0a31ff08b382db5302480f775480b8e68f8febca0ceff81e4b19153c6f8bf60313b93bef2cc34d34e1df41317de0ce613a201d1660a788a03e2@52.206.67.235:30303",
        "enode://5fbfb426fbb46f8b8c1bd3dd140f5b511da558cd37d60844b525909ab82e13a25ee722293c829e52cb65c2305b1637fa9a2ea4d6634a224d5f400bfe244ac0de@162.243.55.45:30303",
        "enode://42d8f29d1db5f4b2947cd5c3d76c6d0d3697e6b9b3430c3d41e46b4bb77655433aeedc25d4b4ea9d8214b6a43008ba67199374a9b53633301bca0cd20c6928ab@104.155.176.151:30303",
        "enode://814920f1ec9510aa9ea1c8f79d8b6e6a462045f09caa2ae4055b0f34f7416fca6facd3dd45f1cf1673c0209e0503f02776b8ff94020e98b6679a0dc561b4eba0@104.154.136.117:30303",
        "enode://72e445f4e89c0f476d404bc40478b0df83a5b500d2d2e850e08eb1af0cd464ab86db6160d0fde64bd77d5f0d33507ae19035671b3c74fec126d6e28787669740@104.198.71.200:30303",
        "enode://5cd218959f8263bc3721d7789070806b0adff1a0ed3f95ec886fb469f9362c7507e3b32b256550b9a7964a23a938e8d42d45a0c34b332bfebc54b29081e83b93@35.187.57.94:30303",
        "enode://39abab9d2a41f53298c0c9dc6bbca57b0840c3ba9dccf42aa27316addc1b7e56ade32a0a9f7f52d6c5db4fe74d8824bcedfeaecf1a4e533cacb71cf8100a9442@144.76.238.49:30303",
        "enode://f50e675a34f471af2438b921914b5f06499c7438f3146f6b8936f1faeb50b8a91d0d0c24fb05a66f05865cd58c24da3e664d0def806172ddd0d4c5bdbf37747e@144.76.238.49:30306",
        "enode://6dd3ac8147fa82e46837ec8c3223d69ac24bcdbab04b036a3705c14f3a02e968f7f1adfcdb002aacec2db46e625c04bf8b5a1f85bb2d40a479b3cc9d45a444af@104.237.131.102:30303",
        "enode://18a551bee469c2e02de660ab01dede06503c986f6b8520cb5a65ad122df88b17b285e3fef09a40a0d44f99e014f8616cf1ebc2e094f96c6e09e2f390f5d34857@47.90.36.129:30303",
        "enode://2521b2616f795f3eb21757b52908978783a5eb8c35850e5934015f713d00bb476370176264b5b678b88e4e14bed4196476627f7e079d67bf0c02622c0fe7d9d7@125.134.78.189:30303",
        "enode://3f5f14647126dc39323447e22cb548369e1377a4e789ad48a6dc6680df1a39a28c46d36e79165fa155fdfaa67337d9703e1f029d5a788306fdef2030669a3bba@50.64.94.28:30303",
        "enode://4fca8ecaf9bd12b805b2b99d2ed6a28e62223707d16c53dd746e2a70f067308b0d8d9a769412f9b323b3410083dfef3eeadd139fd6946535692c1b31467f1080@159.203.78.75:30303",
        "enode://57be9e74b22ff3ea1bd3fedeb2ced310387dd176866793e273c7712305d8e4677f8913c86f93dfa8810e1cdb4177e5f87112db8748199a7771baf8dced63688b@104.41.188.223:30303",
        "enode://94072bbbf1d3e5648afc573bbaf79b14a26ac48380f635fde32782631329263fe7a347251079f9abd3a2678f5bc5e672f8e6aff93a27f0f8f4e0e4f961dac68d@1.226.84.230:50303",
        "enode://98b863da48ab8bef2339a823d552f3619fd8e892425ae40c6812c6f7e4a0afb4f9591b012183e89a63bb01c5085d0e96aa5f0812652335fb0ac946d6aaf15881@118.178.57.121:30303",
        "enode://fba5a07e283d517a2680bcfc7aeb498ac2d246d756556a2ebd5edeb39496491c47a6d27e27f82833b7d7d12defc8de994de04bb58beb72472649f9a323006820@41.135.121.6:30303"
      ]

      # Maximum discovered nodes stored (TODO: remove me once full protocol is in place)
      nodes-limit = 1000

      # Initial delay for discovery scan
      scan-initial-delay = 10.seconds

      # Scan interval for discovery
      scan-interval = 1.minute

      # Discovery message expiration time
      message-expiration = 90.minutes

      # (TODO: remove me once full protocol is in place)
      scan-max-nodes = 18
    }

    known-nodes {
      # How often known nodes updates are persisted to disk
      persist-interval = 20.seconds

      # Maximum number of persisted nodes
      max-persisted-nodes = 200
    }

    peer {
      # Retry delay for failed attempt at connecting to a peer
      connect-retry-delay = 1 minute

      # Maximum number of reconnect attempts after the connection has been initiated.
      # After that, the connection will be dropped until its initiated again (eg. by peer discovery)
      connect-max-retries = 2

      disconnect-poison-pill-timeout = 5 seconds

      wait-for-hello-timeout = 3 seconds

      wait-for-status-timeout = 30 seconds

      wait-for-chain-check-timeout = 15 seconds

      wait-for-handshake-timeout = 3 seconds

      wait-for-tcp-ack-timeout = 5 seconds

      # Maximum block headers in a single response message (as a blockchain host)
      max-blocks-headers-per-message = 100

      # Maximum block bodies in a single response message (as a blockchain host)
      max-blocks-bodies-per-message = 100

      # Maximum transactions receipts in a single response message (as a blockchain host)
      max-receipts-per-message = 100

      # Maximum MPT components in a single response message (as a blockchain host)
      max-mpt-components-per-message = 200

      # Maximum number of peers this node can connect to
      max-outgoing-peers = 40

      # Maximum number of peers that can connect to this node
      max-incoming-peers = 5

      # Maximum number of peers that can be connecting to this node
      max-pending-peers = 5

      # Ethereum network identifier:
      # 1 - mainnet, 2 - morden
      network-id = 1

      # Initial delay before connecting to nodes
      update-nodes-initial-delay = 5.seconds

      # Newly discovered nodes connect attempt interval
      update-nodes-interval = 20.seconds
    }

    rpc {
      # JSON-RPC mode
      # Available modes are: http, https
      # Choosing https requires creating a certificate and setting up 'certificate-keystore-path' and
      # 'certificate-password-file'
      # See: https://github.com/input-output-hk/mantis/wiki/Creating-self-signed-certificate-for-using-JSON-RPC-with-HTTPS
      mode = "http"

      # Whether to enable JSON-RPC endpoint
      enabled = true

      # Listening address of JSON-RPC HTTP/HTTPS endpoint
      interface = "localhost"

      # Listening port of JSON-RPC HTTP/HTTPS endpoint
      port = 8546

      # Path to the keystore storing the certificates (used only for https)
      # null value indicates HTTPS is not being used
      certificate-keystore-path = null

      # Type of certificate keystore being used
      # null value indicates HTTPS is not being used
      certificate-keystore-type = null

      # File with the password used for accessing the certificate keystore (used only for https)
      # null value indicates HTTPS is not being used
      certificate-password-file = null

      # Enabled JSON-RPC APIs over the JSON-RPC endpoint
      # Available choices are: eth, web3, net, personal, daedalus
      apis = "eth,web3,net,personal,daedalus"

      # Domains allowed to query RPC endpoint. Use "*" to enable requests from
      # any domain.
      cors-allowed-origins = []

      # Maximum number of blocks for daedalus_getAccountTransactions
      account-transactions-max-blocks = 50000

      net {
        peer-manager-timeout = 5.seconds
      }
    }
  }

  txPool {
    # Maximum number of pending transaction kept in the pool
    tx-pool-size = 1000

    pending-tx-manager-query-timeout = 5.seconds

    transaction-timeout = 2.minutes
  }

  consensus {
    # FIXME this was moved here from the `mining` section
    active-timeout = 5 seconds

    # See io.iohk.ethereum.consensus.Protocol for the available protocols.
    # Declaring the protocol here means that a more protocol-specific configuration
    # is pulled from the corresponding consensus implementation.
    # For example, in case of ethash, a section named `mining` is used.
    protocol = ethash

    # If true then the consensus protocol uses this node for mining.
    # In the case of ethash PoW, this means mining new blocks, as specified by Ethereum.
    # In the general case, the semantics are due to the specific consensus implementation.
    mining-enabled = false
  }

  mining {
    # Maximum number of ommers kept in the pool
    ommers-pool-size = 30

    # This determines how many parallel eth_getWork request we can handle, by storing the prepared blocks in a cache,
    # until a corresponding eth_submitWork request is received
    block-cashe-size = 30

    # Miner's coinbase address
    coinbase = "0011223344556677889900112233445566778899"


    ommer-pool-query-timeout = 5.seconds

    # Extra data to add to mined blocks
    header-extra-data = "mantis"

    ethash-dir = ${user.home}"/.ethash"

    mine-rounds = 100000
  }

  blockchain {
    # Frontier block number
    frontier-block-number = "0"

    # Homestead fork block number
    # Doc: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2.md
    homestead-block-number = "1150000"

    # EIP-106 fork block number
    # Doc: https://github.com/ethereum/EIPs/issues/106
    eip106-block-number = "1000000000000000000"

    # EIP-150 fork block number
    # Doc: https://github.com/ethereum/EIPs/issues/150
    eip150-block-number = "2500000"

    # EIP-155 fork block number
    # Doc: https://github.com/ethereum/eips/issues/155
    # 3 000 000 following lead of existing clients implementation to maintain compatibility
    # https://github.com/paritytech/parity/blob/b50fb71dd1d29dfde2a6c7e1830447cf30896c31/ethcore/res/ethereum/classic.json#L15
    eip155-block-number = "3000000"

    # EIP-160 fork block number
    # Doc: https://github.com/ethereum/EIPs/issues/160
    eip160-block-number = "3000000"

    # EIP-161 fork block number (ETH Only)
    # Doc: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-161.md
    eip161-block-number = "1000000000000000000"

    # EIP-170 max code size (Eth only)
    # Doc: https://github.com/ethereum/EIPs/issues/170
    # null value indicates there's no max code size for the contract code
    max-code-size = null

    # Difficulty bomb pause block number
    # Doc: https://github.com/ethereumproject/ECIPs/blob/master/ECIPs/ECIP-1010.md
    difficulty-bomb-pause-block-number = "3000000"

    # Difficulty bomb continuation block number
    # Doc: https://github.com/ethereumproject/ECIPs/blob/master/ECIPs/ECIP-1010.md
    difficulty-bomb-continue-block-number = "5000000"

    # DAO fork configuration (Ethereum HF/Classic split)
    # https://blog.ethereum.org/2016/07/20/hard-fork-completed/
    dao {
      # DAO fork block number
      fork-block-number = "1920000"

      # The hash of the accepted DAO fork block
      fork-block-hash = "94365e3a8c0b35089c1d1195081fe7489b528a84b22199c916180db8b28ade7f"

      # Extra data to be put in fork block headers
      block-extra-data = null

      # number of blocks to place extra data after fork
      block-extra-data-range = 10

      # Address to send funds when draining
      refund-contract-address = null

      # List of accounts to be drained
      drain-list = null
    }

    # Starting nonce a an empty account. Some networks (like Morden) use different values.
    account-start-nonce = "0"

    # The ID of the accepted chain
    chain-id = "0x3d"

    # Custom genesis JSON file path
    # null value indicates using default genesis definition that matches the main network
    custom-genesis-file = null

    # Monetary policy parameters
    # Doc: https://github.com/ethereumproject/ECIPs/blob/master/ECIPs/ECIP-1017.md
    monetary-policy {
      # Block reward in the first era
      first-era-block-reward = "5000000000000000000"

      # Monetary policy era duration in number of blocks
      era-duration = 5000000

      # Rate at which rewards get reduced in successive eras.
      # Value in range [0.0, 1.0]
      reward-reduction-rate = 0.2
    }

    # if 2 competing blocktree branches are equal in terms of total difficulty and this is set to true, then gas
    # consumed in those branches will be used to resolve the tie
    # this is currently only used in ETS blockchain tests
    gas-tie-breaker = false
  }

  sync {
    # Whether to enable fast-sync
    do-fast-sync = true

    # Interval for updating peers during sync
    peers-scan-interval = 3.seconds

    # Duration for blacklisting a peer. Blacklisting reason include: invalid response from peer, response time-out, etc.
    blacklist-duration = 200.seconds

    # Retry interval when not having enough peers to start fast-sync
    start-retry-interval = 5.seconds

    # Retry interval for resuming fast sync after all connections to peers were lost
    sync-retry-interval = 5.seconds

    # Response time-out from peer during sync. If a peer fails to respond within this limit, it will be blacklisted
    peer-response-timeout = 3.minutes

    # Interval for logging syncing status info
    print-status-interval = 30.seconds

    # How often to dump fast-sync status to disk. If the client is restarted, fast-sync will continue from this point
    persist-state-snapshot-interval = 1.minute

    # Maximum concurrent requests when in fast-sync mode
    max-concurrent-requests = 50

    # Requested number of block headers when syncing from other peers
    block-headers-per-request = 200

    # Requested number of block bodies when syncing from other peers
    block-bodies-per-request = 128

    # Requested number of TX receipts when syncing from other peers
    receipts-per-request = 60

    # Requested number of MPT nodes when syncing from other peers
    nodes-per-request = 200

    # Minimum number of peers required to start fast-sync (by determining the target block)
    min-peers-to-choose-target-block = 2

    # During fast-sync when most up to date block is determined from peers, the actual target block number
    # will be decreased by this value
    target-block-offset = 500

    # How often to query peers for new blocks after the top of the chain has been reached
    check-for-new-block-interval = 10.seconds

    # size of the list that keeps track of peers that are failing to provide us with mpt node
    # we switch them to download only blockchain elements
    fastsync-block-chain-only-peers-pool = 100

    # time between 2 consecutive requests to peer when doing fast sync, this is to prevent flagging us as spammer
    fastsync-throttle = 2 seconds

    # When we receive a branch that is not rooted in our chain (we don't have a parent for the first header), it means
    # we found a fork. To resolve it, we need to query the same peer for previous headers, to find a common ancestor.
    # This setting determines how many additional headers we request. The default of 12 may be regarded as confirmation
    # depth in ethereum (https://www.reddit.com/r/ethereum/comments/4eplsv/how_many_confirms_is_considered_safe_in_ethereum/)
    branch-resolution-request-size = 12

    # threshold for storing non-main-chain blocks in queue.
    # if: current_best_block_number - block_number > max-queued-block-number-behind
    # then: the block will not be queued (such already queued blocks will be removed)
    max-queued-block-number-behind = 10

    # threshold for storing non-main-chain blocks in queue.
    # if: block_number - current_best_block_number > max-queued-block-number-ahead
    # then: the block will not be queued (such already queued blocks will be removed)
    max-queued-block-number-ahead = 10

    # Maximum number of blocks, after which block hash from NewBlockHashes packet is considered ancient
    # and peer sending it is blacklisted
    max-new-block-hash-age = 20

    # Maximum number of hashes processed form NewBlockHashes packet
    max-new-hashes = 64

    # This a recovery mechanism for the issue of missing state nodes during blocks execution:
    # off - missing state node will result in an exception
    # on - missing state node will be redownloaded from a peer and block execution will be retried. This can repeat
    #      several times until block execution succeeds
    redownload-missing-state-nodes = on

    # See: https://github.com/ethereum/go-ethereum/pull/1889
    fast-sync-block-validation-k = 100
    fast-sync-block-validation-n = 2048
    fast-sync-block-validation-x = 50
  }

  pruning {
    # Pruning mode that the application will use.
    #
    # - archive: No pruning is performed
    # - basic: reference count based pruning
    #
    # After changing, please delete previous db before starting the client:
    #
    mode = "basic"

    # The amount of block history kept before pruning
    # Note: if fast-sync clients choose target block offset greater than this value, mantis may not be able to
    # correctly act as a fast-sync server
    history = 1000
  }

  db {
    # IODB database is not currently used
    iodb {
      path = ${mantis.datadir}"/iodb/"
    }

    leveldb {
      # LevelDB data directory
      path = ${mantis.datadir}"/leveldb/"

      # Create DB data directory if it's missing
      create-if-missing = true

      # Should the DB raise an error as soon as it detects an internal corruption
      paranoid-checks = true

      # Force checksum verification of all data that is read from the file system on behalf of a particular read
      verify-checksums = true
    }
  }

  filter {
    # Time at which a filter remains valid
    filter-timeout = 10.minutes

    filter-manager-query-timeout = 3.minutes
  }

  extvm {
    host = "127.0.0.1"
    port = 8888
  }
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  logger-startup-timeout = 30s
  log-dead-letters = off
}

